/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.minicqrs.core.db.tables.records;

import be.wegenenverkeer.minicqrs.core.db.tables.Journal;
import java.time.LocalDateTime;
import org.jooq.JSONB;
import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class JournalRecord extends UpdatableRecordImpl<JournalRecord> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>public.journal.id</code>. */
  public void setId(String value) {
    set(0, value);
  }

  /** Getter for <code>public.journal.id</code>. */
  public String getId() {
    return (String) get(0);
  }

  /** Setter for <code>public.journal.event</code>. */
  public void setEvent(JSONB value) {
    set(1, value);
  }

  /** Getter for <code>public.journal.event</code>. */
  public JSONB getEvent() {
    return (JSONB) get(1);
  }

  /** Setter for <code>public.journal.sequence</code>. */
  public void setSequence(Long value) {
    set(2, value);
  }

  /** Getter for <code>public.journal.sequence</code>. */
  public Long getSequence() {
    return (Long) get(2);
  }

  /** Setter for <code>public.journal.global_sequence</code>. */
  public void setGlobalSequence(Long value) {
    set(3, value);
  }

  /** Getter for <code>public.journal.global_sequence</code>. */
  public Long getGlobalSequence() {
    return (Long) get(3);
  }

  /** Setter for <code>public.journal.shard</code>. */
  public void setShard(Long value) {
    set(4, value);
  }

  /** Getter for <code>public.journal.shard</code>. */
  public Long getShard() {
    return (Long) get(4);
  }

  /** Setter for <code>public.journal.occured</code>. */
  public void setOccured(LocalDateTime value) {
    set(5, value);
  }

  /** Getter for <code>public.journal.occured</code>. */
  public LocalDateTime getOccured() {
    return (LocalDateTime) get(5);
  }

  /** Setter for <code>public.journal.type</code>. */
  public void setType(String value) {
    set(6, value);
  }

  /** Getter for <code>public.journal.type</code>. */
  public String getType() {
    return (String) get(6);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record3<String, String, Long> key() {
    return (Record3) super.key();
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached JournalRecord */
  public JournalRecord() {
    super(Journal.JOURNAL);
  }

  /** Create a detached, initialised JournalRecord */
  public JournalRecord(
      String id,
      JSONB event,
      Long sequence,
      Long globalSequence,
      Long shard,
      LocalDateTime occured,
      String type) {
    super(Journal.JOURNAL);

    setId(id);
    setEvent(event);
    setSequence(sequence);
    setGlobalSequence(globalSequence);
    setShard(shard);
    setOccured(occured);
    setType(type);
    resetChangedOnNotNull();
  }
}
