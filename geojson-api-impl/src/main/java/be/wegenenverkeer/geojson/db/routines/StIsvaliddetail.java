/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.geojson.db.routines;

import be.wegenenverkeer.geojson.db.Public;
import be.wegenenverkeer.geojson.db.udt.ValidDetail;
import be.wegenenverkeer.geojson.db.udt.records.ValidDetailRecord;
import be.wegenenverkeer.geojson.util.GeolatteGeometryConverter;
import org.geolatte.geom.Geometry;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class StIsvaliddetail extends AbstractRoutine<ValidDetailRecord> {

  private static final long serialVersionUID = 1L;

  /** The parameter <code>public.st_isvaliddetail.RETURN_VALUE</code>. */
  public static final Parameter<ValidDetailRecord> RETURN_VALUE =
      Internal.createParameter(
          "RETURN_VALUE", ValidDetail.VALID_DETAIL.getDataType(), false, false);

  /** The parameter <code>public.st_isvaliddetail.geom</code>. */
  public static final Parameter<Geometry<?>> GEOM =
      Internal.createParameter(
          "geom", SQLDataType.OTHER, false, false, new GeolatteGeometryConverter());

  /** The parameter <code>public.st_isvaliddetail.flags</code>. */
  public static final Parameter<Integer> FLAGS =
      Internal.createParameter(
          "flags",
          SQLDataType.INTEGER.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.INTEGER)),
          true,
          false);

  /** Create a new routine call instance */
  public StIsvaliddetail() {
    super("st_isvaliddetail", Public.PUBLIC, ValidDetail.VALID_DETAIL.getDataType());

    setReturnParameter(RETURN_VALUE);
    addInParameter(GEOM);
    addInParameter(FLAGS);
  }

  /** Set the <code>geom</code> parameter IN value to the routine */
  public void setGeom(Geometry<?> value) {
    setValue(GEOM, value);
  }

  /**
   * Set the <code>geom</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setGeom(Field<Geometry<?>> field) {
    setField(GEOM, field);
  }

  /** Set the <code>flags</code> parameter IN value to the routine */
  public void setFlags(Integer value) {
    setValue(FLAGS, value);
  }

  /**
   * Set the <code>flags</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setFlags(Field<Integer> field) {
    setField(FLAGS, field);
  }
}
