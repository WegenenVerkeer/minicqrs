/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.geojson.db.routines;

import be.wegenenverkeer.geojson.db.Public;
import be.wegenenverkeer.geojson.util.GeolatteGeometryConverter;
import org.geolatte.geom.Geometry;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class StWrapx extends AbstractRoutine<Geometry<?>> {

  private static final long serialVersionUID = 1L;

  /** The parameter <code>public.st_wrapx.RETURN_VALUE</code>. */
  public static final Parameter<Geometry<?>> RETURN_VALUE =
      Internal.createParameter(
          "RETURN_VALUE", SQLDataType.OTHER, false, false, new GeolatteGeometryConverter());

  /** The parameter <code>public.st_wrapx.geom</code>. */
  public static final Parameter<Geometry<?>> GEOM =
      Internal.createParameter(
          "geom", SQLDataType.OTHER, false, false, new GeolatteGeometryConverter());

  /** The parameter <code>public.st_wrapx.wrap</code>. */
  public static final Parameter<Double> WRAP =
      Internal.createParameter("wrap", SQLDataType.DOUBLE, false, false);

  /** The parameter <code>public.st_wrapx.move</code>. */
  public static final Parameter<Double> MOVE =
      Internal.createParameter("move", SQLDataType.DOUBLE, false, false);

  /** Create a new routine call instance */
  public StWrapx() {
    super("st_wrapx", Public.PUBLIC, SQLDataType.OTHER, new GeolatteGeometryConverter());

    setReturnParameter(RETURN_VALUE);
    addInParameter(GEOM);
    addInParameter(WRAP);
    addInParameter(MOVE);
  }

  /** Set the <code>geom</code> parameter IN value to the routine */
  public void setGeom(Geometry<?> value) {
    setValue(GEOM, value);
  }

  /**
   * Set the <code>geom</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setGeom(Field<Geometry<?>> field) {
    setField(GEOM, field);
  }

  /** Set the <code>wrap</code> parameter IN value to the routine */
  public void setWrap(Double value) {
    setValue(WRAP, value);
  }

  /**
   * Set the <code>wrap</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setWrap(Field<Double> field) {
    setField(WRAP, field);
  }

  /** Set the <code>move</code> parameter IN value to the routine */
  public void setMove(Double value) {
    setValue(MOVE, value);
  }

  /**
   * Set the <code>move</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setMove(Field<Double> field) {
    setField(MOVE, field);
  }
}
