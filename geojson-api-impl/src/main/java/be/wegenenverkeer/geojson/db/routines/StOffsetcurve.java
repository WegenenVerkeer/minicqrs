/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.geojson.db.routines;

import be.wegenenverkeer.geojson.db.Public;
import be.wegenenverkeer.geojson.util.GeolatteGeometryConverter;
import org.geolatte.geom.Geometry;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class StOffsetcurve extends AbstractRoutine<Geometry<?>> {

  private static final long serialVersionUID = 1L;

  /** The parameter <code>public.st_offsetcurve.RETURN_VALUE</code>. */
  public static final Parameter<Geometry<?>> RETURN_VALUE =
      Internal.createParameter(
          "RETURN_VALUE", SQLDataType.OTHER, false, false, new GeolatteGeometryConverter());

  /** The parameter <code>public.st_offsetcurve.line</code>. */
  public static final Parameter<Geometry<?>> LINE =
      Internal.createParameter(
          "line", SQLDataType.OTHER, false, false, new GeolatteGeometryConverter());

  /** The parameter <code>public.st_offsetcurve.distance</code>. */
  public static final Parameter<Double> DISTANCE =
      Internal.createParameter("distance", SQLDataType.DOUBLE, false, false);

  /** The parameter <code>public.st_offsetcurve.params</code>. */
  public static final Parameter<String> PARAMS =
      Internal.createParameter(
          "params",
          SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("''::text"), SQLDataType.CLOB)),
          true,
          false);

  /** Create a new routine call instance */
  public StOffsetcurve() {
    super("st_offsetcurve", Public.PUBLIC, SQLDataType.OTHER, new GeolatteGeometryConverter());

    setReturnParameter(RETURN_VALUE);
    addInParameter(LINE);
    addInParameter(DISTANCE);
    addInParameter(PARAMS);
  }

  /** Set the <code>line</code> parameter IN value to the routine */
  public void setLine(Geometry<?> value) {
    setValue(LINE, value);
  }

  /**
   * Set the <code>line</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setLine(Field<Geometry<?>> field) {
    setField(LINE, field);
  }

  /** Set the <code>distance</code> parameter IN value to the routine */
  public void setDistance(Double value) {
    setValue(DISTANCE, value);
  }

  /**
   * Set the <code>distance</code> parameter to the function to be used with a {@link
   * org.jooq.Select} statement
   */
  public void setDistance(Field<Double> field) {
    setField(DISTANCE, field);
  }

  /** Set the <code>params</code> parameter IN value to the routine */
  public void setParams(String value) {
    setValue(PARAMS, value);
  }

  /**
   * Set the <code>params</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setParams(Field<String> field) {
    setField(PARAMS, field);
  }
}
