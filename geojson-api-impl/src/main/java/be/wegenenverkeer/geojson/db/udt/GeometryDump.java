/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.geojson.db.udt;

import be.wegenenverkeer.geojson.db.Public;
import be.wegenenverkeer.geojson.db.udt.records.GeometryDumpRecord;
import be.wegenenverkeer.geojson.util.GeolatteGeometryConverter;
import org.geolatte.geom.Geometry;
import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class GeometryDump extends UDTImpl<GeometryDumpRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>public.geometry_dump</code> */
  public static final GeometryDump GEOMETRY_DUMP = new GeometryDump();

  /** The class holding records for this type */
  @Override
  public Class<GeometryDumpRecord> getRecordType() {
    return GeometryDumpRecord.class;
  }

  /** The attribute <code>public.geometry_dump.path</code>. */
  public static final UDTField<GeometryDumpRecord, Integer[]> PATH =
      createField(DSL.name("path"), SQLDataType.INTEGER.array(), GEOMETRY_DUMP, "");

  /** The attribute <code>public.geometry_dump.geom</code>. */
  public static final UDTField<GeometryDumpRecord, Geometry<?>> GEOM =
      createField(
          DSL.name("geom"), SQLDataType.OTHER, GEOMETRY_DUMP, "", new GeolatteGeometryConverter());

  /** No further instances allowed */
  private GeometryDump() {
    super(DSL.name("geometry_dump"), null, null, false);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
  }
}
