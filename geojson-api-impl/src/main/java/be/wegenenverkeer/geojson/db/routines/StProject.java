/*
 * This file is generated by jOOQ.
 */
package be.wegenenverkeer.geojson.db.routines;

import be.wegenenverkeer.geojson.db.Public;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

/**
 * @deprecated Unknown data type. If this is a qualified, user-defined type, it may have been
 *     excluded from code generation. If this is a built-in type, you can define an explicit {@link
 *     org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off
 *     using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
 */
@Deprecated
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class StProject extends AbstractRoutine<Object> {

  private static final long serialVersionUID = 1L;

  /**
   * @deprecated Unknown data type. If this is a qualified, user-defined type, it may have been
   *     excluded from code generation. If this is a built-in type, you can define an explicit
   *     {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be
   *     turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator
   *     configuration.
   */
  @Deprecated
  public static final Parameter<Object> RETURN_VALUE =
      Internal.createParameter(
          "RETURN_VALUE",
          DefaultDataType.getDefaultDataType("\"public\".\"geography\""),
          false,
          false);

  /**
   * @deprecated Unknown data type. If this is a qualified, user-defined type, it may have been
   *     excluded from code generation. If this is a built-in type, you can define an explicit
   *     {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be
   *     turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator
   *     configuration.
   */
  @Deprecated
  public static final Parameter<Object> GEOG =
      Internal.createParameter(
          "geog", DefaultDataType.getDefaultDataType("\"public\".\"geography\""), false, false);

  /** The parameter <code>public.st_project.distance</code>. */
  public static final Parameter<Double> DISTANCE =
      Internal.createParameter("distance", SQLDataType.DOUBLE, false, false);

  /** The parameter <code>public.st_project.azimuth</code>. */
  public static final Parameter<Double> AZIMUTH =
      Internal.createParameter("azimuth", SQLDataType.DOUBLE, false, false);

  /** Create a new routine call instance */
  public StProject() {
    super(
        "st_project",
        Public.PUBLIC,
        DefaultDataType.getDefaultDataType("\"public\".\"geography\""));

    setReturnParameter(RETURN_VALUE);
    addInParameter(GEOG);
    addInParameter(DISTANCE);
    addInParameter(AZIMUTH);
  }

  /** Set the <code>geog</code> parameter IN value to the routine */
  public void setGeog(Object value) {
    setValue(GEOG, value);
  }

  /**
   * Set the <code>geog</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public void setGeog(Field<Object> field) {
    setField(GEOG, field);
  }

  /** Set the <code>distance</code> parameter IN value to the routine */
  public void setDistance(Double value) {
    setValue(DISTANCE, value);
  }

  /**
   * Set the <code>distance</code> parameter to the function to be used with a {@link
   * org.jooq.Select} statement
   */
  public void setDistance(Field<Double> field) {
    setField(DISTANCE, field);
  }

  /** Set the <code>azimuth</code> parameter IN value to the routine */
  public void setAzimuth(Double value) {
    setValue(AZIMUTH, value);
  }

  /**
   * Set the <code>azimuth</code> parameter to the function to be used with a {@link
   * org.jooq.Select} statement
   */
  public void setAzimuth(Field<Double> field) {
    setField(AZIMUTH, field);
  }
}
